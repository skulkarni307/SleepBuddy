clear; clc; close all;

run(['..' filesep 'startup.m'])

% Remove old files generated by this demo
OldFolder = [pwd,filesep, 'OutputData', filesep, 'ResultsNSR'];
if exist(OldFolder, 'dir')
    rmdir(OldFolder, 's');
    fprintf('Old Demo Folder deleted \n \n');
end
% Initialize settings for demo
HRVparams = InitializeHRVparams('Proj_6254');
HRVparams.MSE.on = 0; % No MSE analysis for this demo
HRVparams.DFA.on = 0; % No DFA analysis for this demo
HRVparams.HRT.on = 0; % No HRT analysis for this demo
HRVparams.output.separate = 0;   % For this demo write all the results in one file 

% Check for a list of files to be analyzed in current directory in .dat format
%[subjectIDs,filesTBA] = GenerateListOfFilesTBA(HRVparams.ext, HRVparams.readdata,[]);

%disp(filesTBA)
% Prepare for parallel loop by eliminating variables
% clear nummatchingfiles x i filename flag match
% numsub = length(subjectIDs);
% notAnalyzed = 0;

load('Test\Record_label.mat');
Record = Record_label;
num_p = length(Record); %number of patients
for p = 1:num_p
    
    % load patient specific data
    ecg = Record(p).Filtered_ecg;
    RSA = Record(p).rr;
    Rpk = Record(p).Rpk;
    tRSA = (Rpk(1:end-1) + (Rpk(2:end)-Rpk(1:end-1))/2)/250;
    subjectIDs=Record(p).ID;
    disp(subjectIDs)  
    [results, resFilenameHRV] = Main_HRV_Analysis(RSA,tRSA,'RRIntervals',HRVparams,subjectIDs);
    currentFile = [HRVparams.writedata filesep resFilenameHRV.HRV '.csv'];
            fprintf('\n');
% %     catch
% %        
% %         results = NaN;
% %         col_titles = {'NaN'};
% %         currentFile = '';
% %         notAnalyzed = 1;
% %         fprintf('Error on subject %s \n', char(subjectIDs(p)));    
% %     end
end
% figure(1)
% plot(tRSA,RSA);
% hold on
% plot(tRSA+1, Rpk,'o')
% xlabel('[s]');
% ylabel('[mV]')
% 
